# ####################################################
# USE THIS FILE FOR ANY DEFAULT VALUES FOR ALL ORACLES
# ####################################################
attestationProgramId: ""

azureSecretName: ""
azureSecretPath: ""
azureVaultUrl: ""

chain: ""
cluster: ""
computeUnitLimit: ""
computeUnitPrice: ""
debug: ""
dockerKey: ""
dockerUser: ""
evmChainId: ""
feedRelayerEnabled: ""
gcpConfigBucket: ""

googleApplicationCredentials: ""
googlePayerSecretPath: ""

heartbeatInterval: "15"

host: "x.y.z"

infisicalSecretKey: ""
infisicalSecretPath: "/"
infisicalSecretSlug: "dev"
infisicalTokenNamespace: "default"

ipfsApiUrl: "ipfs.infura.io"
ipfsKey: ""
ipfsSecret: ""
ipfsUrl: "https://ipfs.infura.io:5001"

metricsExporter: "prometheus"
metricsPort: 9090

namespace: "default"
networkId: ""

payerSecret: ""
payerSecretKey: ""

pushModel: "true"
pvcName: "function-manager-pvc"
rpcUrl: ""

saveResultComputeUnits: 300000

serviceAccountJson: "bnVsbA==" #base64 encoded json
serviceAccountName: ""
solanaMainnetRpc: ""

verbose: ""

components:
    key: ""
    queue: ""
    type: "oracle"
    oracle:
      image: "docker.io/switchboardlabs/pull-oracle:stable"
      queue: ""
      key: ""
      host: ""
      port: 8081
    gateway:
      image: "docker.io/switchboardlabs/pull-oracle:stable"
      host: ""
      port: 8082
    guardian:
      image: "docker.io/switchboardlabs/pull-oracle:stable"
      queue: ""
      key: ""
      host: ""
      port: 8083

appType: "oracle"
azureClientID: ""
azureTenantID: ""

sgx:
  type: ""
  memoryMiB: 0
  cpu: 0

txTelemetry:
  pgHost: ""
  pgUser: ""
  pgDatabase: ""
  pgPassword: ""

influxdbEndpoint: "remote-write.switchboard.xyz/write"

ingress:
  enabled: false

oracleKeys:
  - name: idx-1
    data: ""
    queue: ""
    queueAddress: ""
    payerSecret: ""
    oracleQueueKey: ""
    oracleAuthority: ""
    solanaOracleQueueKey: ""
    sasQueue: ""
    dockerUser: ""
    dockerKey: ""
    ipfsUrl: "https://ipfs.infura.io:5001"
    ipfsKey: "XXX"
    ipfsSecret: "XXX"
    attestationQueue: ""
