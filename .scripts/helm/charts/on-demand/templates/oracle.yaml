apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $values.cluster }}-oracle
  namespace: {{ $.Values.namespace }}
  labels:
    chain: {{ $.Values.chain }}
    app: oracle
  annotations:
    keel.sh/approvals: "0"
    keel.sh/policy: "regexp:^(devnet|stable)$" # update policy (available: patch, minor, major, all, force)
    keel.sh/trigger: "poll"                     # enable active repository checking (webhooks and GCR would still work)
    keel.sh/match-tag: "true"                   # only makes a difference when used with 'force' policy, will only update if tag matches :dev->:dev, :prod->:prod 
    #keel.sh/policy: "force"
    #keel.sh/pollSchedule: "@every 1m"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oracle
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        chain: {{ $.Values.chain }}
        app: oracle
    spec:
      dnsPolicy: ClusterFirst
      serviceAccountName: {{ $.Values.serviceAccount }}
      containers:
      - image: {{ $.Values.components.guardian.image | quote }}
        env:
        -
          name: LIST_CONFIG_AND_EXIT
          value: "false"
        -
          name: CHAIN
          value: {{ $values.chain | quote }}
        -
          name: CLUSTER
          value: {{ $values.cluster }}
        -
          name: NETWORK_ID
          value: {{ $values.networkId }}
        -
          name: HEARTBEAT_INTERVAL
          value: {{ $values.heartbeatInterval | default "180" | quote }}
        -
          name: KEYPAIR_PATH
          value: "/data/protected_files/keypair.bin"
        -
          name: ORACLE_PORT
          value: "8081"
        -
          name: ENABLE_PUSH_MODEL
          value: "0"
        -
          name: ENABLE_GATEWAY
          value: "0"
        -
          name: ENABLE_PUSH_ORACLE
          value: "0"
        -
          name: ENABLE_PULL_ORACLE
          value: "1"
        -
          name: ENABLE_GUARDIAN
          value: "0"
        -
          name: SOLANA_SAVE_RESULT_COMPUTE_UNITS
          value: "300000"
        -
          name: SOLANA_COMPUTE_UNIT_PRICE
          value: "1"
        -
          name: PULL_ORACLE
          value: "{{ $.Values.components.oracle.key }}"
        -
          name: PULL_QUEUE
          value: "{{ $.Values.components.oracle.queue }}"
        -
          name: ORACLE_INGRESS
          value: "{{ $.Values.components.oracle.ingress }}"
        -
          name: INFLUXDB_ENDPOINT
          value: "{{ $.Values.influxdbEndpoint }}"
        -
          name: RPC_URL
          value: {{ $values.rpcUrl }}
        -
          name: WSS_URL
          value: {{ $values.wssUrl }}
        -
          name: WSS_RPC_URL
          value: {{ $values.wssUrl }}
        -
          name: BACKUP_RPC_URL_1
          value: {{ $values.backupRpc1  }}
        -
          name: BACKUP_RPC_URL_2
          value: {{ $values.backupRpc2  }}
        -
          name: TELEMETRY_FEED_RESULT_PUSH_INTERVAL_MS
          value: {{ $values.telemetryFeedResultPushIntervalMs | default "5000" | quote }}
        -
          name: TELEMETRY_FEED_RESULT_PUSH_URL
          value: {{ $values.telemetryFeedResultPushUrl }}
        -
          name: TASK_RUNNER_SOLANA_RPC
          value: {{ $values.solanaMainnetRpc }}
        -
          name: JUPITER_SWAP_API_KEY
          value: {{ $values.jupiterSwapApiKey | default "3a3b41bc06d49f9c89a8550ff84072be" }}
        -
          name: IPFS_URL
          value: {{ $values.ipfsApiUrl | quote }}
        -
          name: IPFS_SECRET
          value: {{ $values.ipfsSecret | quote }}
        -
          name: IPFS_KEY
          value: {{ $values.ipfsKey | quote }}
        # SOLANA
        -
          name: ORACLE_AUTHORITY
          value: {{ $values.components.authority }}

        # METRICS
        -
          name: METRICS_EXPORTER
          value: {{ $values.metricsExporter }}
        # LOGGING
        - name: RUST_LOG
          value: "info"
        - name: RUST_BACKTRACE
          value: "1"
        # ALERTING
        -
          name: VERBOSE
          value: {{ $values.verbose | default "0" | quote }}
        -
          name: DEBUG
          value: {{ $values.debug | default "false" | quote }}
        -
          name: PAGERDUTY_EVENT_KEY
          value: {{ $values.pagerdutyEventKey }}
        -
          name: PAYER_SECRET
          {{ if or (ne $values.payerSecretKey "") (ne $values.infisicalSecretKey "") }}
          valueFrom:
            secretKeyRef:
              {{ if $values.payerSecretKey }}
              name: payer-secret
              key: {{  $values.payerSecretKey | quote }}
              {{ else if $values.infisicalSecretKey }}
              name: payer-secret
              key: {{  $values.infisicalSecretKey | quote }}
              {{ end }}
          {{ else }}
          value: {{ $values.payerSecret }}
          {{ end }}

        imagePullPolicy: Always #Always #IfNotPresent
        name: {{ $values.chain }}-oracle

        {{ if eq $values.command "shell" }}
        command: ["/bin/sh"]
        args: ["-c", "while true; do echo hello; sleep 10;done"]
        {{ end }}

        # SGX ORACLE
        resources:
          limits:
            cpu: 1000m
            memory: 3000Mi
            sgx.intel.com/epc: 16Mi
            sgx.intel.com/enclave: 1
            sgx.intel.com/provision: 1
          requests:
            cpu: 1000m
            memory: 3000Mi
            sgx.intel.com/epc: 16Mi
            sgx.intel.com/enclave: 1
            sgx.intel.com/provision: 1

        {{ if not $values.command  }}
        livenessProbe:
          httpGet:
            path: /metrics
            port: {{ $values.metricsPort }}
          initialDelaySeconds: 60
          failureThreshold: 10
          periodSeconds: 10
          timeoutSeconds: 10
          {{ end }}

        volumeMounts:
        - mountPath: /dev/sgx/enclave
          name: dev-sgx-enclave
        - mountPath: /dev/sgx/provision
          name: dev-sgx-provision
        - mountPath: /data/protected_files
          name: sealed-files

      volumes:
      - name: shared-data
        emptyDir: {}
      - name: dev-sgx-enclave
        hostPath:
          path: /dev/sgx/enclave
      - name: dev-sgx-provision
        hostPath:
          path: /dev/sgx/provision
      - name: sealed-files
        hostPath:
          path: /data/protected_files
---
apiVersion: v1
kind: Service
metadata:
  name: oracle
  namespace: {{ $.Values.namespace }}
spec:
  selector:
    app: oracle
  ports:
    - protocol: TCP
      port: {{ $.Values.components.oracle.port }}
      targetPort: {{ $.Values.components.oracle.port }}
      name: oracle-svc
