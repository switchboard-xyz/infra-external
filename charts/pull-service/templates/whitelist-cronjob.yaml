# apiVersion: batch/v1
# kind: CronJob
# metadata:
 # name: update-oracle-whitelist
 # namespace: {{ $.Values.namespace }}
 # annotations:
   # "helm.sh/hook": pre-install,pre-upgrade
   # "helm.sh/hook-weight": "5"
# spec:
  # schedule: "*/5 * * * *" # Add your desired schedule here
  # jobTemplate:
    # spec: # Changed from 'template' to 'spec'
      # template:
        # spec:
          # serviceAccountName: update-whitelist-service-account
          # containers:
          # - name: update-oracle-whitelist
            # env:
            # - name: NAMESPACE
              # value: {{ $.Values.namespace | quote }} # replace with your namespace
            # image: alpine/k8s:1.29.0 #todo, add necessary rust binary for get-ip-whitelist
            # command: ["/bin/sh", "-c"]
            # args:
            # - |
                # IP_JSON_ARRAY=$(./get-ip-whitelist)
                # IP_LIST=$(echo $IP_JSON_ARRAY | jq -r '.[]' | paste -sd "," -)
                # kubectl annotate ingress oracle-ingress -n $NAMESPACE nginx.ingress.kubernetes.io/whitelist-source-range="$IP_LIST"
          # restartPolicy: Never
      # backoffLimit: 2
#
#
# ---
#
#
# kind: Role
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
  # namespace: {{ $.Values.namespace }}
  # name: update-whitelist-role
# rules:
# - apiGroups: [""]
  # resources: ["persistentvolumeclaims", "pods"]
  # verbs: ["get", "watch", "list", "create", "delete"]
#
#
# ---
# kind: RoleBinding
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
  # name: update-whitelist-rolebinding
  # namespace: {{ $.Values.namespace }}
# subjects:
# - kind: ServiceAccount
  # name: update-whitelist-service-account
  # namespace: {{ $.Values.namespace }}
# roleRef:
  # kind: Role
  # name: update-whitelist-role
  # apiGroup: rbac.authorization.k8s.io
#
# ---
#
# apiVersion: v1
# kind: ServiceAccount
# metadata:
  # name: update-whitelist-service-account
  # namespace: {{ $.Values.namespace }}
#
