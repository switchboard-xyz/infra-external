{{ if eq $.Values.appType "dind" }}
{{- $values := .Values -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    chain: {{ $.Values.chain }}
    app: qvn
    should_scrape: scrape
    azure.workload.identity/use: "true"
  name: qvn
  namespace: {{ $.Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qvn
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        chain: {{ $.Values.chain }}
        app: qvn
        should_scrape: scrape
    spec:
      serviceAccountName: {{ $.Values.serviceAccount }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - qvn
            topologyKey: kubernetes.io/hostname
      hostNetwork: false

      containers:
      # - image: "docker.io/switchboardlabs/qvn:latest"
      - image: {{ if $values.qvnImage }}{{ $values.qvnImage }}{{ else }}{{ "docker.io/switchboardlabs/qvn:latest" }}{{ end }}
        env:
        -
          name: CHAIN
          value: {{ $values.chain }}
        -
          name: CLUSTER
          value: {{ $values.cluster }}
        -
          name: NETWORK_ID
          value: {{ $values.networkId }}
        -
          name: PROGRAM_ID
          value: {{ $values.pid }}
        -
          name: HEARTBEAT_INTERVAL
          value: {{ $values.heartbeatInterval | default "30" | quote }}
        -
          name: ORACLE_KEY
          value: {{ $values.oracleKey | quote }}
        -
          name: EVM_ORACLE_KEY
          value: {{ $values.evmOracleKey | quote}}
        -
          name: PAYER_SECRET
           {{ if $values.infisicalSecretKey }}
          valueFrom:
            secretKeyRef:
              name: infisical-secret
              key: {{  $values.infisicalSecretKey }}
          {{ else }}
         value: {{ $values.payerSecret }}
          {{ end }}
        -
          name: RPC_URL
          value: {{ $values.rpcUrl }}
        -
          name: WSS_URL
          value: {{ $values.wssUrl }}
        -
          name: WSS_RPC_URL
          value: {{ $values.wssUrl }}
        -
          name: BACKUP_RPC_URL_1
          value: {{ $values.backupRpc1  }}
        -
          name: BACKUP_RPC_URL_2
          value: {{ $values.backupRpc2  }}
        -
          name: TELEMETRY_FEED_RESULT_PUSH_INTERVAL_MS
          value: {{ $values.telemetryFeedResultPushIntervalMs | default "5000" | quote }}
        -
          name: TELEMETRY_FEED_RESULT_PUSH_URL
          value: {{ $values.telemetryFeedResultPushUrl }}
        # TASK RUNNER CONFIG
        -
          name: TASK_RUNNER_SOLANA_RPC
          value: {{ $values.solanaMainnetRpc | default "https://switchboard.rpcpool.com/ec20ad2831092cfcef66d677539a" }}
        -
          name: GCP_CONFIG_BUCKET
          value: {{ $values.gcpConfigBucket }}
        -
          name: JUPITER_SWAP_API_KEY
          value: {{ $values.jupiterSwapApiKey | default "3a3b41bc06d49f9c89a8550ff84072be" }}
        # APTOS / EVM / SUI
        -
          name: BATCH_SAVE_RESULT_INTERVAL
          value: {{ $values.batchSaveResultInterval | quote }}
        # EVM
        -
          name: UPDATE_SEARCH_REFRESH_INTERVAL
          value: {{ $values.updateSearchRefreshInterval | quote }}
        -
          name: IPFS_API_URL
          value: {{ $values.ipfsApiUrl | quote }}
        -
          name: INFURA_IPFS_CREDENTIALS
          value: {{ $values.infuraIpfsCredentials | quote }}
        -
          name: CONTRACT_ADDRESS
          value: {{ $values.contractAddress | quote }}
        -
          name: CHAIN_ID
          value: {{ $values.evmChainId | quote }}
        -
          name: EVM_CHAIN_ID
          value: {{ $values.evmChainId | quote }}
        -
          name: UPDATE_SEARCH_INTERVAL
          value: {{ $values.updateSearchInterval | quote }}
        # V3
        -
          name: FUNDING_AMOUNT
          value: {{ $values.fundingAmount | quote }}
        -
          name: FUNDING_THRESHOLD
          value: {{ $values.fundingThreshold | quote }}
        -
          name: FUNDING_CHECK_INTERVAL
          value: {{ $values.fundingCheckInterval | quote }}
        # SOLANA
        -
          name: SOLANA_DISABLE_REST_CONNECTION
          value: {{ $values.disableRestConnection | default "0" | quote  }}
        -
          name: SOLANA_SAVE_RESULT_COMPUTE_UNITS
          value: {{ $values.saveResultComputeUnits | quote  }}
        -
          name: SOLANA_COMPUTE_UNIT_PRICE
          value: {{ $values.computeUnitPrice | default "1" | quote }}
        -
          name: QUEUE
          value: {{ $values.queueAddress | default "null" | quote  }}
        -
          name: QUOTE_KEY
          value: {{ $values.quoteAddress | default "null" | quote  }}
        -
          name: SAS_QUEUE
          value: {{ $values.sasQueue | default "null" | quote  }}
        -
          name: DISABLE_NONCE_QUEUE
          value: {{ $values.disableNonceQueue | default "0" | quote }}
        -
          name: NONCE_QUEUE_SIZE
          value: {{ $values.nonceQueueSize | default "1000" | quote }}
        -  # Auto reconnect event watcher after 1hr
          name: SOLANA_EVENT_WATCHER_AUTORECONNECT
          value: {{ $values.autoreconnectEvents | default "0" | quote }}
        -
          name: SOLANA_BLOCKHASH_REFRESH_RATE
          value: {{ $values.blockhashRefreshRate | quote  }}
        -
          name: ORACLE_QUEUE_KEY
          value: {{ $values.oracleQueueKey | default "null" | quote }}
        -
          name: SOLANA_ORACLE_QUEUE_KEY
          value: {{ $values.oracleQueueKey | default "null" | quote }}

        # PERFORMANCE
        -
          name: EVENT_LOOP_STALL_INTERVAL_ERROR
          value: {{ $values.eventLoopStallThreshold | quote }}
        -
          name: LAST_EVENT_STALENESS_THRESHOLD
          value: {{ $values.lastEventStalenessThreshold | quote }}
        -
          name: LAST_RESPONSE_STALENESS_THRESHOLD
          value: {{ $values.lastResponseStalenessThreshold | quote }}
        # METRICS
        -
          name: METRICS_EXPORTER
          value: {{ $values.metricsExporter | default "null" | quote }}
        # ALERTING
        -
          name: VERBOSE
          value: {{ $values.verbose | default "0" | quote }}
        -
          name: DEBUG
          value: {{ $values.debug | default "0" | quote }}
        -
          name: PAGERDUTY_EVENT_KEY
          value: {{ $values.pagerdutyEventKey | default "" | quote }}
        # SECRETS
        -
          name: GOOGLE_PAYER_SECRET_PATH
          value: {{ $values.googlePayerSecretPath }}
        -
          name: GOOGLE_APPLICATION_CREDENTIALS
          value: {{ $values.googleApplicationCredentials }}

        -
          name: AWS_ACCESS_KEY_ID
          value: {{ $values.awsAccessKeyId }}
        -
          name: AWS_SECRET_ACCESS_KEY
          value: {{ $values.awsSecretAccessKey }}
        -
          name: AZURE_PAYER_SECRET_PATH
          value: {{ $values.azureSecretPath }}
        -
          name: DOCKER_USER
          value: {{ $values.dockerUser }}
        -
          name: DOCKER_KEY
          value: {{ $values.dockerKey }}
        -
          name: IPFS_URL
          value: {{ $values.ipfsUrl }}
        -
          name: IPFS_KEY
          value: {{ $values.ipfsKey }}
        -
          name: IPFS_SECRET
          value: {{ $values.ipfsSecret }}

      # IMAGE / RESOURCES
        imagePullPolicy: Always
        name: "qvn"
        {{ if eq $values.command "shell" }}
        command: ["/bin/sh"]
        args: ["-c", "while true; do echo hello; sleep 10;done"]
        {{ end }}
        securityContext:
          privileged: true

        ports:
        - name: web
          containerPort: 9090
          protocol: TCP
        - name: liveness-port
          containerPort: 8080
          protocol: TCP

        # SGX ORACLE
        resources:
          limits:
            cpu: 1700m
            memory: 1700Mi
            {{ if eq $values.sgx.type "azure" }}
            sgx.intel.com/epc: 100Mi
            sgx.intel.com/enclave: 1
            sgx.intel.com/provision: 1
            {{ end }}
          requests:
            cpu: 1500m
            memory: 1600Mi
            {{ if eq $values.sgx.type "azure" }}
            sgx.intel.com/epc: 100Mi
            sgx.intel.com/enclave: 1
            sgx.intel.com/provision: 1
            {{ end }}
        # livenessProbe:
          # httpGet:
            # path: /metrics
            # port: 9090
          # initialDelaySeconds: 60
          # failureThreshold: 10
          # periodSeconds: 10
          # timeoutSeconds: 10


        volumeMounts:
        - mountPath: /home/credentials/
          name: google-cloud-key
        - mountPath: /var/run/aesmd
          name: var-run-aesmd
        - mountPath: /dev/sgx/enclave
          name: dev-sgx-enclave
        - mountPath: /dev/sgx/provision
          name: dev-sgx-provision
        # - mountPath: /var/run/docker.sock
        #   name: docker-socket
        - mountPath: /home/dotenv
          name: dind-dotenv

      volumes:
      - name: google-cloud-key
        secret:
          secretName: {{ $.Values.appType}}-service-account
      - name: dind-dotenv
        secret:
          secretName: dind-dotenv
      - name: shared-data
        emptyDir: {}
      - name: var-run-aesmd
        hostPath:
          path: /var/run/aesmd/
      - name: dev-sgx-enclave
        hostPath:
          path: /dev/sgx/enclave
      - name: dev-sgx-provision
        hostPath:
          path: /dev/sgx/provision

{{ end }}
